name: Kratix

on:
  workflow_dispatch:
    inputs:
      sha:
        description: 'Commit sha of Kratix'
        required: true
      message:
        description: 'Commit message'
        required: false

jobs:
  set-pending-status:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.AUTOMATION_APP_ID }}
          private-key: ${{ secrets.AUTOMATION_PRIVATE_KEY }}
          repositories: kratix

      - name: Set pending status
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const statusContext = 'ci-tests';
            const runId = process.env.GITHUB_RUN_ID || 'unknown';
            const sha = '${{ github.event.inputs.sha }}'

            try {
              await github.rest.repos.createCommitStatus({
                owner: 'syntasso',
                repo: 'kratix',
                sha: sha,
                state: 'pending',
                target_url: `https://github.com/syntasso/ci/actions/runs/${runId}`,
                description: 'CI tests in progress',
                context: statusContext
              });
              core.info('Successfully set pending status');
            } catch (error) {
              core.setFailed(`Failed to set pending status: ${error.message}`);
            }

  test-kratix:
    needs: [set-pending-status]
    uses:
      syntasso/ci/.github/workflows/test-kratix.yaml@main
    with:
      sha: ${{ github.event.inputs.sha }}

  release-kratix:
    needs: [test-kratix]
    uses:
      syntasso/ci/.github/workflows/release-kratix.yaml@main
    with:
      sha: ${{ github.event.inputs.sha }}
    secrets: inherit

  test-ske:
    needs: [ set-pending-status ]
    uses:
      syntasso/ci/.github/workflows/test-ske.yaml@main
    with:
      sha: ${{ github.event.inputs.sha }}
    secrets: inherit

  final-status-check:
    runs-on: ubuntu-latest
    needs: 
      - set-pending-status
      - test-kratix
      - release-kratix
      - test-ske
    if: always()
    steps:
      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.AUTOMATION_APP_ID }}
          private-key: ${{ secrets.AUTOMATION_PRIVATE_KEY }}
          repositories: kratix

      - name: Update Kratix commit status
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const statusContext = 'ci-tests';
            const runId = process.env.GITHUB_RUN_ID || 'unknown';
            const sha = '${{ github.event.inputs.sha }}' 

            // Collect job results from workflow context
            const jobResults = [
              '${{ needs.test-kratix.result }}',
              '${{ needs.release-kratix.result }}',
              '${{ needs.test-ske.result }}',
            ];

            const hasFailed = jobResults.some(result => 
              result === 'failure' || 
              result === 'timed_out' || 
              result === 'cancelled'
            );

            const state = hasFailed ? 'failure' : 'success';
            const description = hasFailed ? 'CI workflow failed' : 'CI workflow passed';
            
            try {
              await github.rest.repos.createCommitStatus({
                owner: 'syntasso',
                repo: 'kratix',
                sha: sha,
                state: state,
                target_url: `https://github.com/syntasso/ci/actions/runs/${runId}`,
                description: description,
                context: statusContext
              });
              core.info(`Successfully set final status to ${state}`);
            } catch (error) {
              core.setFailed(`Failed to set final status: ${error.message}`);
            }