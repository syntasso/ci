name: Create SKE Pre-release

on:
  workflow_dispatch:

jobs:
  create-pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out enterprise kratix
        uses: actions/checkout@v4
        with:
          repository: syntasso/enterprise-kratix
          ssh-key: ${{ secrets.ENTERPRISE_KRATIX_DEPLOY_KEY_READ_PUSH }}
          ref: ${{ github.event.inputs.ske_sha }}
          submodules: recursive
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: Login to ghcr
        run: |
          echo "${{ secrets.GHCR_TOKEN }}" | docker login --username syntassodev --password-stdin ghcr.io
          echo "${{ secrets.GHCR_TOKEN }}" | docker login --username syntassodev --password-stdin registry.syntasso.io
      - name: Build and push SKE at next RC
        env:
          GH_TOKEN: ${{ secrets.ENTERPRISE_KRATIX_GH_TOKEN }}
        run: |
          ./scripts/push-ske-rc-images.sh
      - name: Create and push pre-release tag
        env:
          GH_TOKEN: ${{ secrets.ENTERPRISE_KRATIX_GH_TOKEN }}
        run: |
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/refs/tags/kustomize/v5.6.0/hack/install_kustomize.sh" | bash
          next_rc_tag=$(./scripts/generate-next-rc-version)

          cp update_pipeline_adapter_img.yaml.template patch_pipeline_img.yaml.template
          if grep -q "WC_IMG" ./read-only-kratix/distribution/kratix.yaml; then cp update_legacy_wc_img.yaml.template patch_pipeline_img.yaml.template; fi

          # we should inject scarf here
          sed "s#SKE_PLATFORM_IMAGE#registry.syntasso.io/syntasso/ske-platform:$next_rc_tag#g; s#SKE_PLATFORM_PIPELINE_ADAPTER_IMAGE#registry.syntasso.io/syntasso/ske-platform-pipeline-adapter:$next_rc_tag#g" patch_pipeline_img.yaml.template > patch_pipeline_img.yaml
          kustomize build > ske-distribution.yaml
          rm patch_pipeline_img.yaml*
 
          new_tag=$(./scripts/tag-new-rc-version)
          echo "NEW_TAG=$new_tag" >> "$GITHUB_ENV"

      - name: Check out Helm Charts
        uses: actions/checkout@v4
        with:
          repository: syntasso/helm-charts
          branch: kratix-v0.0.0-latest
          fetch-depth: 1
          path: charts
      - name: Generate Helm Chart with SKE distribution
        run: |
          ./charts/scripts/generate-templates-and-crds ./ske-distribution.yaml
      - name: Package Kratix Helm Chart at Pre-Release version
        run: |
          echo "NEW_TAG is $NEW_TAG"
          helm package charts/kratix/ --version $NEW_TAG
          mv kratix-$NEW_TAG.tgz kratix-helm-chart-$NEW_TAG.tgz
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Create Github release and upload artifacts to s3
        run: |
          ./scripts/create-pre-release-and-upload-artifacts
        env:
          GH_TOKEN: ${{ secrets.ENTERPRISE_KRATIX_GH_TOKEN }}
