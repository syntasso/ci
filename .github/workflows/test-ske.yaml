name: test-ske

on:
  workflow_dispatch:
    inputs:
      ssh_session:
        type: boolean
        description: 'Run the build with tmate debugging.'
        required: false
        default: false
      sha:
        description: 'Commit sha of Kratix'
        required: false
        type: string
      ske_sha:
        description: 'Commit sha of enterprise-kratix'
        required: false
        type: string
  workflow_call:
    inputs:
      sha:
        description: 'Commit sha of Kratix'
        required: false
        type: string
      ske_sha:
        description: 'Commit sha of enterprise-kratix'
        required: false
        type: string

jobs:
  ske-quick-start-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/enterprise-kratix
          ref: ${{ github.event.inputs.ske_sha }}
          path: enterprise-kratix
          ssh_key: ${{ secrets.ENTERPRISE_KRATIX_DEPLOY_KEY_READ_PUSH }}
          submodules: 'true'
          submodule_repository: syntasso/kratix
          submodule_ref: ${{ github.event.inputs.sha }}
          submodule_path: enterprise-kratix/read-only-kratix
      - name: Quick start tests
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_RELEASE_CREATOR_TOKEN }}
        run: |
          cd enterprise-kratix/ske-quick-start-installer/
          make system-test

  ske-upgrade-and-oss-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/enterprise-kratix
          ref: ${{ github.event.inputs.ske_sha }}
          path: enterprise-kratix
          ssh_key: ${{ secrets.ENTERPRISE_KRATIX_DEPLOY_KEY_READ_PUSH }}
          submodules: 'true'
          submodule_repository: syntasso/kratix
          submodule_ref: ${{ github.event.inputs.sha }}
          submodule_path: enterprise-kratix/read-only-kratix
      - name: Install vCluster CLI
        uses: loft-sh/setup-vcluster@main
      - name: Upgrade tests
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_RELEASE_CREATOR_TOKEN }}
        run: |
          cd enterprise-kratix
          ./scripts/run-ske-test-in-kind.sh

  ske-backstage-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/enterprise-kratix
          ref: ${{ github.event.inputs.ske_sha }}
          path: enterprise-kratix
          ssh_key: ${{ secrets.ENTERPRISE_KRATIX_DEPLOY_KEY_READ_PUSH }}
          submodules: 'true'
          submodule_repository: syntasso/kratix
          submodule_ref: ${{ github.event.inputs.sha }}
          submodule_path: enterprise-kratix/read-only-kratix
      - name: Setup Backstage Environment
        uses: ./.github/actions/setup-backstage
        with:
          backstage_deploy_key: ${{ secrets.BACKSTAGE_REPO_DEPLOY_KEY }}
      - name: Backstage tests
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_RELEASE_CREATOR_TOKEN }}
          DOCKER_PRUNE: "true"
        run: |
          # deleting unnecessary files to gain some hard disk space
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /usr/local/lib/android
          cd enterprise-kratix
          ./scripts/test-ske-with-backstage-in-kind.sh

  ske-operator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/enterprise-kratix
          ref: ${{ github.event.inputs.ske_sha }}
          path: enterprise-kratix
          ssh_key: ${{ secrets.ENTERPRISE_KRATIX_DEPLOY_KEY_READ_PUSH }}
          submodules: 'true'
          submodule_repository: syntasso/kratix
          submodule_ref: ${{ github.event.inputs.sha }}
          submodule_path: enterprise-kratix/read-only-kratix
      - name: Run make test-e2e-ci
        run: |
          cd enterprise-kratix/ske-operator
          make test-e2e-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
          SKE_LICENSE_TOKEN: ${{ secrets.SKE_LICENSE_TOKEN }}

  ske-cli:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/enterprise-kratix
          ref: ${{ github.event.inputs.ske_sha }}
          path: enterprise-kratix
          ssh_key: ${{ secrets.ENTERPRISE_KRATIX_DEPLOY_KEY_READ_PUSH }}
          submodules: 'true'
          submodule_repository: syntasso/kratix
          submodule_ref: ${{ github.event.inputs.sha }}
          submodule_path: enterprise-kratix/read-only-kratix
      - name: Run make test-e2e-ci
        run: |
          cd enterprise-kratix/ske-cli
          make test-e2e-ci
        env:
          SKE_LICENSE_TOKEN: ${{ secrets.SKE_LICENSE_TOKEN }}
          KRATIX_DEVELOPER: true

