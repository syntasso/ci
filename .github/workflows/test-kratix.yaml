name: Test Kratix

on:
  workflow_dispatch:
    inputs:
      sha:
        description: 'Commit sha of Kratix'
        required: true
        type: string
      message:
        description: 'Commit message'
        type: string
        required: false
      ssh_session:
        type: boolean
        description: 'Run the build with tmate debugging.'
        required: false
        default: false
  workflow_call:
    inputs:
      sha:
        required: true
        type: string
      message:
        type: string
        required: false

jobs:
  unit-tests-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
        with:
          repository: syntasso/ci
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
          path: kratix
          ssh_session: ${{ github.event.inputs.ssh_session }}
      - name: Unit Tests
        run: |
          cd kratix
          make test
      - name: Lint
        run: |
          cd kratix
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.64.8
          ./bin/golangci-lint run --config=.golangci-required.yml
      - name: Go vulnerability check
        run: |
          cd kratix
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

  quick-start-test:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
        with:
          repository: syntasso/ci
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
          path: kratix
          ssh_session: ${{ github.event.inputs.ssh_session }}
      - name: System Tests
        run: |
          cd kratix
          DOCKER_BUILDKIT=1 ACK_GINKGO_RC=true cd hack/kratix-quick-start-installer && make system-test

  system-test:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
        with:
          repository: syntasso/ci
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
          path: kratix
          ssh_session: ${{ github.event.inputs.ssh_session }}
      - name: System Tests
        run: |
          cd kratix
          DOCKER_BUILDKIT=1 ACK_GINKGO_RC=true make system-test

  core-test:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
        with:
          repository: syntasso/ci
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
          path: kratix
          ssh_session: ${{ github.event.inputs.ssh_session }}
      - name: System Tests
        run: |
          cd kratix
          DOCKER_BUILDKIT=1 ACK_GINKGO_RC=true make core-test

  integration-test-git:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
        with:
          repository: syntasso/ci
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
          path: kratix
          ssh_session: ${{ github.event.inputs.ssh_session }}
      - name: Checkout out kratix helm charts
        uses: actions/checkout@v4
        with:
          repository: syntasso/helm-charts
          path: kratix/charts
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: e2e-demo-test-helm-git
        run: |
          cd kratix
          STATE_STORE="git" ./scripts/helm-e2e-test.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  integration-test-bucket:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Checkout ci repository
        uses: actions/checkout@v4
        with:
          repository: syntasso/ci
      - name: Setup Common Environment
        uses: ./.github/actions/setup-common
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
          path: kratix
          ssh_session: ${{ github.event.inputs.ssh_session }}
      - name: Checkout out kratix helm charts
        uses: actions/checkout@v4
        with:
          repository: syntasso/helm-charts
          path: kratix/charts
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: e2e-demo-test-helm-bucket
        run: |
          cd kratix
          STATE_STORE="bucket" ./scripts/helm-e2e-test.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
