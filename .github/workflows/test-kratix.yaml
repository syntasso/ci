name: Test Kratix

on:
  workflow_dispatch:
    inputs:
      sha:
        description: 'Commit sha of Kratix'
        required: true
        type: string
      branch:
        description: 'Commit message'
        type: string
        required: false
  workflow_call:
    inputs:
      sha:
        required: true
        type: string
      branch:
        type: string
        required: false

jobs:
  unit-tests-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          check-latest: true
      - name: Unit Tests
        run: |
          make test
      - name: Lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.63.4
          ./bin/golangci-lint run --config=.golangci-required.yml

  system-test:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Check out kratix
        uses: actions/checkout@v4
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          check-latest: true
      - name: Install Kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@main
        with:
          version: '2.4.0'
      - name: System Tests
        run: |
          DOCKER_BUILDKIT=1 ACK_GINKGO_RC=true make system-test

  core-test:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Check out kratix
        uses: actions/checkout@v4
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          check-latest: true
      - name: Install Kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Setup Flux CLI
        uses: fluxcd/flux2/action@main
        with:
          version: '2.4.0'
      - name: System Tests
        run: |
          DOCKER_BUILDKIT=1 ACK_GINKGO_RC=true make core-test

  integration-test-git:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Check out kratix
        uses: actions/checkout@v4
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
      - name: Checkout out kratix helm charts
        uses: actions/checkout@v4
        with:
          repository: syntasso/helm-charts
          path: charts
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          check-latest: true
      - name: Install Kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: e2e-demo-test-helm-git
        run: |
          STATE_STORE="git" ./scripts/helm-e2e-test.sh

  integration-test-bucket:
    runs-on: ubuntu-latest
    needs: [unit-tests-and-lint]
    steps:
      - name: Check out kratix
        uses: actions/checkout@v4
        with:
          repository: syntasso/kratix
          ref: ${{ github.event.inputs.sha }}
      - name: Checkout out kratix helm charts
        uses: actions/checkout@v4
        with:
          repository: syntasso/helm-charts
          path: charts
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
          check-latest: true
      - name: Install Kind
        uses: helm/kind-action@v1
        with:
          install_only: true
      - name: Install Helm
        uses: azure/setup-helm@v3
      - name: e2e-demo-test-helm-bucket
        run: |
          STATE_STORE="bucket" ./scripts/helm-e2e-test.sh
